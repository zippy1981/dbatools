# See http://www.appveyor.com/docs/appveyor-yml for many more options

configuration: "Debug"


before_build:
  - nuget restore bin\projects\dbatools\dbatools.sln
  
build:
  project: bin\projects\dbatools\dbatools.sln

version: 0.9.{build}

cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  - C:\Program Files\WindowsPowerShell\Modules\PSScriptAnalyzer -> appveyor.yml
  - C:\Program Files\WindowsPowerShell\Modules\Pester -> appveyor.yml

shallow_clone: true

# Set build info
environment: 
  environment: development
  version: 0.9.$(appveyor_build_number)
  #appveyor_rdp_password: 2odCuiKmYiem
  azurepasswd:
    secure: ZnF3fWSDfHraMCWlHaekvWrXf3sDqY5M28HMK4236PBbNSoqP29wEhsWMQioSSYGomzgIp9vuiwR8Fc9ViNLoqq0bVcErxEojBFTaPMEzOg2ZwO9OnOTiuUEc5JkoLBv6rEBBWef/DvkFfhr1r0K0xQu6OAPYHVTCRajTZbBRNfCTUM2X2o41t+cSa7681rtnJQnB/8cAfVVnPtJ+97s8w==
  azurelegacypasswd:
    secure: ud4yZN6kPf+VWhgpgJhbEMCoUJKHTiH9uvv71ybTlu+45+V12M+B07YjysoXGC1qnGBwVy4DDGJfh2VkPWxamK0IpsEimsRS/CCEZlb6unYC4dqEm980QwP4/zwcTSK1
    
  matrix:
    - scenario: 2008R2
      main_instance: localhost\SQL2008R2SP2
      setup_scripts: \tests\appveyor.SQL2008R2SP2.ps1
    - scenario: 2016
      main_instance: localhost\SQL2016
      setup_scripts: \tests\appveyor.SQL2016.ps1
    - scenario: service_restarts
      main_instance: localhost\SQL2017,localhost\SQL2016
      setup_scripts: \tests\appveyor.SQL2017.ps1,\tests\appveyor.SQL2016.ps1
    - scenario: 2016_2017
      main_instance: localhost\SQL2017,localhost\SQL2016
      setup_scripts: \tests\appveyor.SQL2017.ps1,\tests\appveyor.SQL2016.ps1
    - scenario: default
      main_instance: localhost\SQL2008R2SP2,localhost\SQL2016
      setup_scripts: \tests\appveyor.SQL2008R2SP2.ps1,\tests\appveyor.SQL2016.ps1

# Set alternative clone folder
clone_folder: c:\github\dbatools

before_test:
  # grab appveyor lab files and needed requirements for tests in CI
  - ps: .\Tests\appveyor.prep.ps1

  # Setting up the local SQL Server environments
  - ps: .\Tests\appveyor.sqlserver.ps1
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

test_script:
   # Test with native PS version
  - ps: .\Tests\appveyor.pester.ps1 -IncludeCoverage

  # Collecting results
  - ps: .\Tests\appveyor.pester.ps1 -Finalize -IncludeCoverage

after_test:
  - ps: .\Tests\appveyor.post.ps1

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
